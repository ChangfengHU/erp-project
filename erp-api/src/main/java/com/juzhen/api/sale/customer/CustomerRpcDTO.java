/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.juzhen.api.sale.customer;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2022-10-16")
public class CustomerRpcDTO implements org.apache.thrift.TBase<CustomerRpcDTO, CustomerRpcDTO._Fields>, java.io.Serializable, Cloneable, Comparable<CustomerRpcDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CustomerRpcDTO");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROJECT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("projectIds", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField SELLER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField SHOP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("shopId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField WEDDING_DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("weddingDay", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DRESSER_FIELD_DESC = new org.apache.thrift.protocol.TField("dresser", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField BUDGET_FIELD_DESC = new org.apache.thrift.protocol.TField("budget", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField DRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("dress", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SUIT_FIELD_DESC = new org.apache.thrift.protocol.TField("suit", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField JEWEL_FIELD_DESC = new org.apache.thrift.protocol.TField("jewel", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField SIDA_FIELD_DESC = new org.apache.thrift.protocol.TField("sida", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CREATE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("createUserId", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField CREATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("createdAt", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField UPSTRINGD_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("upstringdAt", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField DELETED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("deletedAt", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PROJECT_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("projectInfo", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField BOOK_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("bookStatus", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField INSHOP_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("inshopTime", org.apache.thrift.protocol.TType.STRING, (short)22);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CustomerRpcDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CustomerRpcDTOTupleSchemeFactory();

  public long id; // required
  public java.lang.String name; // required
  public java.lang.String phone; // required
  public java.lang.String projectIds; // required
  public int sellerId; // required
  public int shopId; // required
  public java.lang.String source; // required
  public java.lang.String weddingDay; // required
  /**
   * 礼服师
   */
  public java.lang.String dresser; // required
  /**
   * 预算
   */
  public long budget; // required
  /**
   * 婚纱推荐
   */
  public java.lang.String dress; // required
  /**
   * 西服推荐
   */
  public java.lang.String suit; // required
  /**
   * 珠宝推荐
   */
  public java.lang.String jewel; // required
  /**
   * 四大推荐
   */
  public java.lang.String sida; // required
  public java.lang.String remark; // required
  public int createUserId; // required
  public java.lang.String createdAt; // required
  public java.lang.String upstringdAt; // required
  public java.lang.String deletedAt; // required
  public java.lang.String projectInfo; // required
  /**
   * 0 全部  1 已进店 2 未预约 3 已预约
   */
  public int bookStatus; // required
  public java.lang.String inshopTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    PHONE((short)3, "phone"),
    PROJECT_IDS((short)4, "projectIds"),
    SELLER_ID((short)5, "sellerId"),
    SHOP_ID((short)6, "shopId"),
    SOURCE((short)7, "source"),
    WEDDING_DAY((short)8, "weddingDay"),
    /**
     * 礼服师
     */
    DRESSER((short)9, "dresser"),
    /**
     * 预算
     */
    BUDGET((short)10, "budget"),
    /**
     * 婚纱推荐
     */
    DRESS((short)11, "dress"),
    /**
     * 西服推荐
     */
    SUIT((short)12, "suit"),
    /**
     * 珠宝推荐
     */
    JEWEL((short)13, "jewel"),
    /**
     * 四大推荐
     */
    SIDA((short)14, "sida"),
    REMARK((short)15, "remark"),
    CREATE_USER_ID((short)16, "createUserId"),
    CREATED_AT((short)17, "createdAt"),
    UPSTRINGD_AT((short)18, "upstringdAt"),
    DELETED_AT((short)19, "deletedAt"),
    PROJECT_INFO((short)20, "projectInfo"),
    /**
     * 0 全部  1 已进店 2 未预约 3 已预约
     */
    BOOK_STATUS((short)21, "bookStatus"),
    INSHOP_TIME((short)22, "inshopTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // PHONE
          return PHONE;
        case 4: // PROJECT_IDS
          return PROJECT_IDS;
        case 5: // SELLER_ID
          return SELLER_ID;
        case 6: // SHOP_ID
          return SHOP_ID;
        case 7: // SOURCE
          return SOURCE;
        case 8: // WEDDING_DAY
          return WEDDING_DAY;
        case 9: // DRESSER
          return DRESSER;
        case 10: // BUDGET
          return BUDGET;
        case 11: // DRESS
          return DRESS;
        case 12: // SUIT
          return SUIT;
        case 13: // JEWEL
          return JEWEL;
        case 14: // SIDA
          return SIDA;
        case 15: // REMARK
          return REMARK;
        case 16: // CREATE_USER_ID
          return CREATE_USER_ID;
        case 17: // CREATED_AT
          return CREATED_AT;
        case 18: // UPSTRINGD_AT
          return UPSTRINGD_AT;
        case 19: // DELETED_AT
          return DELETED_AT;
        case 20: // PROJECT_INFO
          return PROJECT_INFO;
        case 21: // BOOK_STATUS
          return BOOK_STATUS;
        case 22: // INSHOP_TIME
          return INSHOP_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __SELLERID_ISSET_ID = 1;
  private static final int __SHOPID_ISSET_ID = 2;
  private static final int __BUDGET_ISSET_ID = 3;
  private static final int __CREATEUSERID_ISSET_ID = 4;
  private static final int __BOOKSTATUS_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_IDS, new org.apache.thrift.meta_data.FieldMetaData("projectIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_ID, new org.apache.thrift.meta_data.FieldMetaData("sellerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOP_ID, new org.apache.thrift.meta_data.FieldMetaData("shopId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WEDDING_DAY, new org.apache.thrift.meta_data.FieldMetaData("weddingDay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DRESSER, new org.apache.thrift.meta_data.FieldMetaData("dresser", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUDGET, new org.apache.thrift.meta_data.FieldMetaData("budget", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DRESS, new org.apache.thrift.meta_data.FieldMetaData("dress", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUIT, new org.apache.thrift.meta_data.FieldMetaData("suit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JEWEL, new org.apache.thrift.meta_data.FieldMetaData("jewel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SIDA, new org.apache.thrift.meta_data.FieldMetaData("sida", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("createUserId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATED_AT, new org.apache.thrift.meta_data.FieldMetaData("createdAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPSTRINGD_AT, new org.apache.thrift.meta_data.FieldMetaData("upstringdAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DELETED_AT, new org.apache.thrift.meta_data.FieldMetaData("deletedAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROJECT_INFO, new org.apache.thrift.meta_data.FieldMetaData("projectInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BOOK_STATUS, new org.apache.thrift.meta_data.FieldMetaData("bookStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INSHOP_TIME, new org.apache.thrift.meta_data.FieldMetaData("inshopTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CustomerRpcDTO.class, metaDataMap);
  }

  public CustomerRpcDTO() {
  }

  public CustomerRpcDTO(
    long id,
    java.lang.String name,
    java.lang.String phone,
    java.lang.String projectIds,
    int sellerId,
    int shopId,
    java.lang.String source,
    java.lang.String weddingDay,
    java.lang.String dresser,
    long budget,
    java.lang.String dress,
    java.lang.String suit,
    java.lang.String jewel,
    java.lang.String sida,
    java.lang.String remark,
    int createUserId,
    java.lang.String createdAt,
    java.lang.String upstringdAt,
    java.lang.String deletedAt,
    java.lang.String projectInfo,
    int bookStatus,
    java.lang.String inshopTime)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.phone = phone;
    this.projectIds = projectIds;
    this.sellerId = sellerId;
    setSellerIdIsSet(true);
    this.shopId = shopId;
    setShopIdIsSet(true);
    this.source = source;
    this.weddingDay = weddingDay;
    this.dresser = dresser;
    this.budget = budget;
    setBudgetIsSet(true);
    this.dress = dress;
    this.suit = suit;
    this.jewel = jewel;
    this.sida = sida;
    this.remark = remark;
    this.createUserId = createUserId;
    setCreateUserIdIsSet(true);
    this.createdAt = createdAt;
    this.upstringdAt = upstringdAt;
    this.deletedAt = deletedAt;
    this.projectInfo = projectInfo;
    this.bookStatus = bookStatus;
    setBookStatusIsSet(true);
    this.inshopTime = inshopTime;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CustomerRpcDTO(CustomerRpcDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetProjectIds()) {
      this.projectIds = other.projectIds;
    }
    this.sellerId = other.sellerId;
    this.shopId = other.shopId;
    if (other.isSetSource()) {
      this.source = other.source;
    }
    if (other.isSetWeddingDay()) {
      this.weddingDay = other.weddingDay;
    }
    if (other.isSetDresser()) {
      this.dresser = other.dresser;
    }
    this.budget = other.budget;
    if (other.isSetDress()) {
      this.dress = other.dress;
    }
    if (other.isSetSuit()) {
      this.suit = other.suit;
    }
    if (other.isSetJewel()) {
      this.jewel = other.jewel;
    }
    if (other.isSetSida()) {
      this.sida = other.sida;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    this.createUserId = other.createUserId;
    if (other.isSetCreatedAt()) {
      this.createdAt = other.createdAt;
    }
    if (other.isSetUpstringdAt()) {
      this.upstringdAt = other.upstringdAt;
    }
    if (other.isSetDeletedAt()) {
      this.deletedAt = other.deletedAt;
    }
    if (other.isSetProjectInfo()) {
      this.projectInfo = other.projectInfo;
    }
    this.bookStatus = other.bookStatus;
    if (other.isSetInshopTime()) {
      this.inshopTime = other.inshopTime;
    }
  }

  public CustomerRpcDTO deepCopy() {
    return new CustomerRpcDTO(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.phone = null;
    this.projectIds = null;
    setSellerIdIsSet(false);
    this.sellerId = 0;
    setShopIdIsSet(false);
    this.shopId = 0;
    this.source = null;
    this.weddingDay = null;
    this.dresser = null;
    setBudgetIsSet(false);
    this.budget = 0;
    this.dress = null;
    this.suit = null;
    this.jewel = null;
    this.sida = null;
    this.remark = null;
    setCreateUserIdIsSet(false);
    this.createUserId = 0;
    this.createdAt = null;
    this.upstringdAt = null;
    this.deletedAt = null;
    this.projectInfo = null;
    setBookStatusIsSet(false);
    this.bookStatus = 0;
    this.inshopTime = null;
  }

  public long getId() {
    return this.id;
  }

  public CustomerRpcDTO setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.name;
  }

  public CustomerRpcDTO setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getPhone() {
    return this.phone;
  }

  public CustomerRpcDTO setPhone(java.lang.String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public java.lang.String getProjectIds() {
    return this.projectIds;
  }

  public CustomerRpcDTO setProjectIds(java.lang.String projectIds) {
    this.projectIds = projectIds;
    return this;
  }

  public void unsetProjectIds() {
    this.projectIds = null;
  }

  /** Returns true if field projectIds is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectIds() {
    return this.projectIds != null;
  }

  public void setProjectIdsIsSet(boolean value) {
    if (!value) {
      this.projectIds = null;
    }
  }

  public int getSellerId() {
    return this.sellerId;
  }

  public CustomerRpcDTO setSellerId(int sellerId) {
    this.sellerId = sellerId;
    setSellerIdIsSet(true);
    return this;
  }

  public void unsetSellerId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SELLERID_ISSET_ID);
  }

  /** Returns true if field sellerId is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SELLERID_ISSET_ID);
  }

  public void setSellerIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SELLERID_ISSET_ID, value);
  }

  public int getShopId() {
    return this.shopId;
  }

  public CustomerRpcDTO setShopId(int shopId) {
    this.shopId = shopId;
    setShopIdIsSet(true);
    return this;
  }

  public void unsetShopId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOPID_ISSET_ID);
  }

  /** Returns true if field shopId is set (has been assigned a value) and false otherwise */
  public boolean isSetShopId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOPID_ISSET_ID);
  }

  public void setShopIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOPID_ISSET_ID, value);
  }

  public java.lang.String getSource() {
    return this.source;
  }

  public CustomerRpcDTO setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  public void unsetSource() {
    this.source = null;
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return this.source != null;
  }

  public void setSourceIsSet(boolean value) {
    if (!value) {
      this.source = null;
    }
  }

  public java.lang.String getWeddingDay() {
    return this.weddingDay;
  }

  public CustomerRpcDTO setWeddingDay(java.lang.String weddingDay) {
    this.weddingDay = weddingDay;
    return this;
  }

  public void unsetWeddingDay() {
    this.weddingDay = null;
  }

  /** Returns true if field weddingDay is set (has been assigned a value) and false otherwise */
  public boolean isSetWeddingDay() {
    return this.weddingDay != null;
  }

  public void setWeddingDayIsSet(boolean value) {
    if (!value) {
      this.weddingDay = null;
    }
  }

  /**
   * 礼服师
   */
  public java.lang.String getDresser() {
    return this.dresser;
  }

  /**
   * 礼服师
   */
  public CustomerRpcDTO setDresser(java.lang.String dresser) {
    this.dresser = dresser;
    return this;
  }

  public void unsetDresser() {
    this.dresser = null;
  }

  /** Returns true if field dresser is set (has been assigned a value) and false otherwise */
  public boolean isSetDresser() {
    return this.dresser != null;
  }

  public void setDresserIsSet(boolean value) {
    if (!value) {
      this.dresser = null;
    }
  }

  /**
   * 预算
   */
  public long getBudget() {
    return this.budget;
  }

  /**
   * 预算
   */
  public CustomerRpcDTO setBudget(long budget) {
    this.budget = budget;
    setBudgetIsSet(true);
    return this;
  }

  public void unsetBudget() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BUDGET_ISSET_ID);
  }

  /** Returns true if field budget is set (has been assigned a value) and false otherwise */
  public boolean isSetBudget() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BUDGET_ISSET_ID);
  }

  public void setBudgetIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BUDGET_ISSET_ID, value);
  }

  /**
   * 婚纱推荐
   */
  public java.lang.String getDress() {
    return this.dress;
  }

  /**
   * 婚纱推荐
   */
  public CustomerRpcDTO setDress(java.lang.String dress) {
    this.dress = dress;
    return this;
  }

  public void unsetDress() {
    this.dress = null;
  }

  /** Returns true if field dress is set (has been assigned a value) and false otherwise */
  public boolean isSetDress() {
    return this.dress != null;
  }

  public void setDressIsSet(boolean value) {
    if (!value) {
      this.dress = null;
    }
  }

  /**
   * 西服推荐
   */
  public java.lang.String getSuit() {
    return this.suit;
  }

  /**
   * 西服推荐
   */
  public CustomerRpcDTO setSuit(java.lang.String suit) {
    this.suit = suit;
    return this;
  }

  public void unsetSuit() {
    this.suit = null;
  }

  /** Returns true if field suit is set (has been assigned a value) and false otherwise */
  public boolean isSetSuit() {
    return this.suit != null;
  }

  public void setSuitIsSet(boolean value) {
    if (!value) {
      this.suit = null;
    }
  }

  /**
   * 珠宝推荐
   */
  public java.lang.String getJewel() {
    return this.jewel;
  }

  /**
   * 珠宝推荐
   */
  public CustomerRpcDTO setJewel(java.lang.String jewel) {
    this.jewel = jewel;
    return this;
  }

  public void unsetJewel() {
    this.jewel = null;
  }

  /** Returns true if field jewel is set (has been assigned a value) and false otherwise */
  public boolean isSetJewel() {
    return this.jewel != null;
  }

  public void setJewelIsSet(boolean value) {
    if (!value) {
      this.jewel = null;
    }
  }

  /**
   * 四大推荐
   */
  public java.lang.String getSida() {
    return this.sida;
  }

  /**
   * 四大推荐
   */
  public CustomerRpcDTO setSida(java.lang.String sida) {
    this.sida = sida;
    return this;
  }

  public void unsetSida() {
    this.sida = null;
  }

  /** Returns true if field sida is set (has been assigned a value) and false otherwise */
  public boolean isSetSida() {
    return this.sida != null;
  }

  public void setSidaIsSet(boolean value) {
    if (!value) {
      this.sida = null;
    }
  }

  public java.lang.String getRemark() {
    return this.remark;
  }

  public CustomerRpcDTO setRemark(java.lang.String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public int getCreateUserId() {
    return this.createUserId;
  }

  public CustomerRpcDTO setCreateUserId(int createUserId) {
    this.createUserId = createUserId;
    setCreateUserIdIsSet(true);
    return this;
  }

  public void unsetCreateUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEUSERID_ISSET_ID);
  }

  /** Returns true if field createUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEUSERID_ISSET_ID);
  }

  public void setCreateUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEUSERID_ISSET_ID, value);
  }

  public java.lang.String getCreatedAt() {
    return this.createdAt;
  }

  public CustomerRpcDTO setCreatedAt(java.lang.String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  public void unsetCreatedAt() {
    this.createdAt = null;
  }

  /** Returns true if field createdAt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedAt() {
    return this.createdAt != null;
  }

  public void setCreatedAtIsSet(boolean value) {
    if (!value) {
      this.createdAt = null;
    }
  }

  public java.lang.String getUpstringdAt() {
    return this.upstringdAt;
  }

  public CustomerRpcDTO setUpstringdAt(java.lang.String upstringdAt) {
    this.upstringdAt = upstringdAt;
    return this;
  }

  public void unsetUpstringdAt() {
    this.upstringdAt = null;
  }

  /** Returns true if field upstringdAt is set (has been assigned a value) and false otherwise */
  public boolean isSetUpstringdAt() {
    return this.upstringdAt != null;
  }

  public void setUpstringdAtIsSet(boolean value) {
    if (!value) {
      this.upstringdAt = null;
    }
  }

  public java.lang.String getDeletedAt() {
    return this.deletedAt;
  }

  public CustomerRpcDTO setDeletedAt(java.lang.String deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  public void unsetDeletedAt() {
    this.deletedAt = null;
  }

  /** Returns true if field deletedAt is set (has been assigned a value) and false otherwise */
  public boolean isSetDeletedAt() {
    return this.deletedAt != null;
  }

  public void setDeletedAtIsSet(boolean value) {
    if (!value) {
      this.deletedAt = null;
    }
  }

  public java.lang.String getProjectInfo() {
    return this.projectInfo;
  }

  public CustomerRpcDTO setProjectInfo(java.lang.String projectInfo) {
    this.projectInfo = projectInfo;
    return this;
  }

  public void unsetProjectInfo() {
    this.projectInfo = null;
  }

  /** Returns true if field projectInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectInfo() {
    return this.projectInfo != null;
  }

  public void setProjectInfoIsSet(boolean value) {
    if (!value) {
      this.projectInfo = null;
    }
  }

  /**
   * 0 全部  1 已进店 2 未预约 3 已预约
   */
  public int getBookStatus() {
    return this.bookStatus;
  }

  /**
   * 0 全部  1 已进店 2 未预约 3 已预约
   */
  public CustomerRpcDTO setBookStatus(int bookStatus) {
    this.bookStatus = bookStatus;
    setBookStatusIsSet(true);
    return this;
  }

  public void unsetBookStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BOOKSTATUS_ISSET_ID);
  }

  /** Returns true if field bookStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetBookStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BOOKSTATUS_ISSET_ID);
  }

  public void setBookStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BOOKSTATUS_ISSET_ID, value);
  }

  public java.lang.String getInshopTime() {
    return this.inshopTime;
  }

  public CustomerRpcDTO setInshopTime(java.lang.String inshopTime) {
    this.inshopTime = inshopTime;
    return this;
  }

  public void unsetInshopTime() {
    this.inshopTime = null;
  }

  /** Returns true if field inshopTime is set (has been assigned a value) and false otherwise */
  public boolean isSetInshopTime() {
    return this.inshopTime != null;
  }

  public void setInshopTimeIsSet(boolean value) {
    if (!value) {
      this.inshopTime = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((java.lang.String)value);
      }
      break;

    case PROJECT_IDS:
      if (value == null) {
        unsetProjectIds();
      } else {
        setProjectIds((java.lang.String)value);
      }
      break;

    case SELLER_ID:
      if (value == null) {
        unsetSellerId();
      } else {
        setSellerId((java.lang.Integer)value);
      }
      break;

    case SHOP_ID:
      if (value == null) {
        unsetShopId();
      } else {
        setShopId((java.lang.Integer)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((java.lang.String)value);
      }
      break;

    case WEDDING_DAY:
      if (value == null) {
        unsetWeddingDay();
      } else {
        setWeddingDay((java.lang.String)value);
      }
      break;

    case DRESSER:
      if (value == null) {
        unsetDresser();
      } else {
        setDresser((java.lang.String)value);
      }
      break;

    case BUDGET:
      if (value == null) {
        unsetBudget();
      } else {
        setBudget((java.lang.Long)value);
      }
      break;

    case DRESS:
      if (value == null) {
        unsetDress();
      } else {
        setDress((java.lang.String)value);
      }
      break;

    case SUIT:
      if (value == null) {
        unsetSuit();
      } else {
        setSuit((java.lang.String)value);
      }
      break;

    case JEWEL:
      if (value == null) {
        unsetJewel();
      } else {
        setJewel((java.lang.String)value);
      }
      break;

    case SIDA:
      if (value == null) {
        unsetSida();
      } else {
        setSida((java.lang.String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((java.lang.String)value);
      }
      break;

    case CREATE_USER_ID:
      if (value == null) {
        unsetCreateUserId();
      } else {
        setCreateUserId((java.lang.Integer)value);
      }
      break;

    case CREATED_AT:
      if (value == null) {
        unsetCreatedAt();
      } else {
        setCreatedAt((java.lang.String)value);
      }
      break;

    case UPSTRINGD_AT:
      if (value == null) {
        unsetUpstringdAt();
      } else {
        setUpstringdAt((java.lang.String)value);
      }
      break;

    case DELETED_AT:
      if (value == null) {
        unsetDeletedAt();
      } else {
        setDeletedAt((java.lang.String)value);
      }
      break;

    case PROJECT_INFO:
      if (value == null) {
        unsetProjectInfo();
      } else {
        setProjectInfo((java.lang.String)value);
      }
      break;

    case BOOK_STATUS:
      if (value == null) {
        unsetBookStatus();
      } else {
        setBookStatus((java.lang.Integer)value);
      }
      break;

    case INSHOP_TIME:
      if (value == null) {
        unsetInshopTime();
      } else {
        setInshopTime((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case PHONE:
      return getPhone();

    case PROJECT_IDS:
      return getProjectIds();

    case SELLER_ID:
      return getSellerId();

    case SHOP_ID:
      return getShopId();

    case SOURCE:
      return getSource();

    case WEDDING_DAY:
      return getWeddingDay();

    case DRESSER:
      return getDresser();

    case BUDGET:
      return getBudget();

    case DRESS:
      return getDress();

    case SUIT:
      return getSuit();

    case JEWEL:
      return getJewel();

    case SIDA:
      return getSida();

    case REMARK:
      return getRemark();

    case CREATE_USER_ID:
      return getCreateUserId();

    case CREATED_AT:
      return getCreatedAt();

    case UPSTRINGD_AT:
      return getUpstringdAt();

    case DELETED_AT:
      return getDeletedAt();

    case PROJECT_INFO:
      return getProjectInfo();

    case BOOK_STATUS:
      return getBookStatus();

    case INSHOP_TIME:
      return getInshopTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case PHONE:
      return isSetPhone();
    case PROJECT_IDS:
      return isSetProjectIds();
    case SELLER_ID:
      return isSetSellerId();
    case SHOP_ID:
      return isSetShopId();
    case SOURCE:
      return isSetSource();
    case WEDDING_DAY:
      return isSetWeddingDay();
    case DRESSER:
      return isSetDresser();
    case BUDGET:
      return isSetBudget();
    case DRESS:
      return isSetDress();
    case SUIT:
      return isSetSuit();
    case JEWEL:
      return isSetJewel();
    case SIDA:
      return isSetSida();
    case REMARK:
      return isSetRemark();
    case CREATE_USER_ID:
      return isSetCreateUserId();
    case CREATED_AT:
      return isSetCreatedAt();
    case UPSTRINGD_AT:
      return isSetUpstringdAt();
    case DELETED_AT:
      return isSetDeletedAt();
    case PROJECT_INFO:
      return isSetProjectInfo();
    case BOOK_STATUS:
      return isSetBookStatus();
    case INSHOP_TIME:
      return isSetInshopTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CustomerRpcDTO)
      return this.equals((CustomerRpcDTO)that);
    return false;
  }

  public boolean equals(CustomerRpcDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_projectIds = true && this.isSetProjectIds();
    boolean that_present_projectIds = true && that.isSetProjectIds();
    if (this_present_projectIds || that_present_projectIds) {
      if (!(this_present_projectIds && that_present_projectIds))
        return false;
      if (!this.projectIds.equals(that.projectIds))
        return false;
    }

    boolean this_present_sellerId = true;
    boolean that_present_sellerId = true;
    if (this_present_sellerId || that_present_sellerId) {
      if (!(this_present_sellerId && that_present_sellerId))
        return false;
      if (this.sellerId != that.sellerId)
        return false;
    }

    boolean this_present_shopId = true;
    boolean that_present_shopId = true;
    if (this_present_shopId || that_present_shopId) {
      if (!(this_present_shopId && that_present_shopId))
        return false;
      if (this.shopId != that.shopId)
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (!this.source.equals(that.source))
        return false;
    }

    boolean this_present_weddingDay = true && this.isSetWeddingDay();
    boolean that_present_weddingDay = true && that.isSetWeddingDay();
    if (this_present_weddingDay || that_present_weddingDay) {
      if (!(this_present_weddingDay && that_present_weddingDay))
        return false;
      if (!this.weddingDay.equals(that.weddingDay))
        return false;
    }

    boolean this_present_dresser = true && this.isSetDresser();
    boolean that_present_dresser = true && that.isSetDresser();
    if (this_present_dresser || that_present_dresser) {
      if (!(this_present_dresser && that_present_dresser))
        return false;
      if (!this.dresser.equals(that.dresser))
        return false;
    }

    boolean this_present_budget = true;
    boolean that_present_budget = true;
    if (this_present_budget || that_present_budget) {
      if (!(this_present_budget && that_present_budget))
        return false;
      if (this.budget != that.budget)
        return false;
    }

    boolean this_present_dress = true && this.isSetDress();
    boolean that_present_dress = true && that.isSetDress();
    if (this_present_dress || that_present_dress) {
      if (!(this_present_dress && that_present_dress))
        return false;
      if (!this.dress.equals(that.dress))
        return false;
    }

    boolean this_present_suit = true && this.isSetSuit();
    boolean that_present_suit = true && that.isSetSuit();
    if (this_present_suit || that_present_suit) {
      if (!(this_present_suit && that_present_suit))
        return false;
      if (!this.suit.equals(that.suit))
        return false;
    }

    boolean this_present_jewel = true && this.isSetJewel();
    boolean that_present_jewel = true && that.isSetJewel();
    if (this_present_jewel || that_present_jewel) {
      if (!(this_present_jewel && that_present_jewel))
        return false;
      if (!this.jewel.equals(that.jewel))
        return false;
    }

    boolean this_present_sida = true && this.isSetSida();
    boolean that_present_sida = true && that.isSetSida();
    if (this_present_sida || that_present_sida) {
      if (!(this_present_sida && that_present_sida))
        return false;
      if (!this.sida.equals(that.sida))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_createUserId = true;
    boolean that_present_createUserId = true;
    if (this_present_createUserId || that_present_createUserId) {
      if (!(this_present_createUserId && that_present_createUserId))
        return false;
      if (this.createUserId != that.createUserId)
        return false;
    }

    boolean this_present_createdAt = true && this.isSetCreatedAt();
    boolean that_present_createdAt = true && that.isSetCreatedAt();
    if (this_present_createdAt || that_present_createdAt) {
      if (!(this_present_createdAt && that_present_createdAt))
        return false;
      if (!this.createdAt.equals(that.createdAt))
        return false;
    }

    boolean this_present_upstringdAt = true && this.isSetUpstringdAt();
    boolean that_present_upstringdAt = true && that.isSetUpstringdAt();
    if (this_present_upstringdAt || that_present_upstringdAt) {
      if (!(this_present_upstringdAt && that_present_upstringdAt))
        return false;
      if (!this.upstringdAt.equals(that.upstringdAt))
        return false;
    }

    boolean this_present_deletedAt = true && this.isSetDeletedAt();
    boolean that_present_deletedAt = true && that.isSetDeletedAt();
    if (this_present_deletedAt || that_present_deletedAt) {
      if (!(this_present_deletedAt && that_present_deletedAt))
        return false;
      if (!this.deletedAt.equals(that.deletedAt))
        return false;
    }

    boolean this_present_projectInfo = true && this.isSetProjectInfo();
    boolean that_present_projectInfo = true && that.isSetProjectInfo();
    if (this_present_projectInfo || that_present_projectInfo) {
      if (!(this_present_projectInfo && that_present_projectInfo))
        return false;
      if (!this.projectInfo.equals(that.projectInfo))
        return false;
    }

    boolean this_present_bookStatus = true;
    boolean that_present_bookStatus = true;
    if (this_present_bookStatus || that_present_bookStatus) {
      if (!(this_present_bookStatus && that_present_bookStatus))
        return false;
      if (this.bookStatus != that.bookStatus)
        return false;
    }

    boolean this_present_inshopTime = true && this.isSetInshopTime();
    boolean that_present_inshopTime = true && that.isSetInshopTime();
    if (this_present_inshopTime || that_present_inshopTime) {
      if (!(this_present_inshopTime && that_present_inshopTime))
        return false;
      if (!this.inshopTime.equals(that.inshopTime))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetPhone()) ? 131071 : 524287);
    if (isSetPhone())
      hashCode = hashCode * 8191 + phone.hashCode();

    hashCode = hashCode * 8191 + ((isSetProjectIds()) ? 131071 : 524287);
    if (isSetProjectIds())
      hashCode = hashCode * 8191 + projectIds.hashCode();

    hashCode = hashCode * 8191 + sellerId;

    hashCode = hashCode * 8191 + shopId;

    hashCode = hashCode * 8191 + ((isSetSource()) ? 131071 : 524287);
    if (isSetSource())
      hashCode = hashCode * 8191 + source.hashCode();

    hashCode = hashCode * 8191 + ((isSetWeddingDay()) ? 131071 : 524287);
    if (isSetWeddingDay())
      hashCode = hashCode * 8191 + weddingDay.hashCode();

    hashCode = hashCode * 8191 + ((isSetDresser()) ? 131071 : 524287);
    if (isSetDresser())
      hashCode = hashCode * 8191 + dresser.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(budget);

    hashCode = hashCode * 8191 + ((isSetDress()) ? 131071 : 524287);
    if (isSetDress())
      hashCode = hashCode * 8191 + dress.hashCode();

    hashCode = hashCode * 8191 + ((isSetSuit()) ? 131071 : 524287);
    if (isSetSuit())
      hashCode = hashCode * 8191 + suit.hashCode();

    hashCode = hashCode * 8191 + ((isSetJewel()) ? 131071 : 524287);
    if (isSetJewel())
      hashCode = hashCode * 8191 + jewel.hashCode();

    hashCode = hashCode * 8191 + ((isSetSida()) ? 131071 : 524287);
    if (isSetSida())
      hashCode = hashCode * 8191 + sida.hashCode();

    hashCode = hashCode * 8191 + ((isSetRemark()) ? 131071 : 524287);
    if (isSetRemark())
      hashCode = hashCode * 8191 + remark.hashCode();

    hashCode = hashCode * 8191 + createUserId;

    hashCode = hashCode * 8191 + ((isSetCreatedAt()) ? 131071 : 524287);
    if (isSetCreatedAt())
      hashCode = hashCode * 8191 + createdAt.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpstringdAt()) ? 131071 : 524287);
    if (isSetUpstringdAt())
      hashCode = hashCode * 8191 + upstringdAt.hashCode();

    hashCode = hashCode * 8191 + ((isSetDeletedAt()) ? 131071 : 524287);
    if (isSetDeletedAt())
      hashCode = hashCode * 8191 + deletedAt.hashCode();

    hashCode = hashCode * 8191 + ((isSetProjectInfo()) ? 131071 : 524287);
    if (isSetProjectInfo())
      hashCode = hashCode * 8191 + projectInfo.hashCode();

    hashCode = hashCode * 8191 + bookStatus;

    hashCode = hashCode * 8191 + ((isSetInshopTime()) ? 131071 : 524287);
    if (isSetInshopTime())
      hashCode = hashCode * 8191 + inshopTime.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(CustomerRpcDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProjectIds()).compareTo(other.isSetProjectIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectIds, other.projectIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSellerId()).compareTo(other.isSetSellerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerId, other.sellerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetShopId()).compareTo(other.isSetShopId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShopId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shopId, other.shopId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWeddingDay()).compareTo(other.isSetWeddingDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWeddingDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.weddingDay, other.weddingDay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDresser()).compareTo(other.isSetDresser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDresser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dresser, other.dresser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBudget()).compareTo(other.isSetBudget());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBudget()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.budget, other.budget);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDress()).compareTo(other.isSetDress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dress, other.dress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSuit()).compareTo(other.isSetSuit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.suit, other.suit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJewel()).compareTo(other.isSetJewel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJewel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jewel, other.jewel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSida()).compareTo(other.isSetSida());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSida()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sida, other.sida);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateUserId()).compareTo(other.isSetCreateUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createUserId, other.createUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedAt()).compareTo(other.isSetCreatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdAt, other.createdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUpstringdAt()).compareTo(other.isSetUpstringdAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpstringdAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.upstringdAt, other.upstringdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDeletedAt()).compareTo(other.isSetDeletedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeletedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deletedAt, other.deletedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProjectInfo()).compareTo(other.isSetProjectInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectInfo, other.projectInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBookStatus()).compareTo(other.isSetBookStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBookStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bookStatus, other.bookStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInshopTime()).compareTo(other.isSetInshopTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInshopTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inshopTime, other.inshopTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CustomerRpcDTO(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectIds:");
    if (this.projectIds == null) {
      sb.append("null");
    } else {
      sb.append(this.projectIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellerId:");
    sb.append(this.sellerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("shopId:");
    sb.append(this.shopId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("source:");
    if (this.source == null) {
      sb.append("null");
    } else {
      sb.append(this.source);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("weddingDay:");
    if (this.weddingDay == null) {
      sb.append("null");
    } else {
      sb.append(this.weddingDay);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dresser:");
    if (this.dresser == null) {
      sb.append("null");
    } else {
      sb.append(this.dresser);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("budget:");
    sb.append(this.budget);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dress:");
    if (this.dress == null) {
      sb.append("null");
    } else {
      sb.append(this.dress);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("suit:");
    if (this.suit == null) {
      sb.append("null");
    } else {
      sb.append(this.suit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jewel:");
    if (this.jewel == null) {
      sb.append("null");
    } else {
      sb.append(this.jewel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sida:");
    if (this.sida == null) {
      sb.append("null");
    } else {
      sb.append(this.sida);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createUserId:");
    sb.append(this.createUserId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdAt:");
    if (this.createdAt == null) {
      sb.append("null");
    } else {
      sb.append(this.createdAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("upstringdAt:");
    if (this.upstringdAt == null) {
      sb.append("null");
    } else {
      sb.append(this.upstringdAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deletedAt:");
    if (this.deletedAt == null) {
      sb.append("null");
    } else {
      sb.append(this.deletedAt);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("projectInfo:");
    if (this.projectInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.projectInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bookStatus:");
    sb.append(this.bookStatus);
    first = false;
    if (!first) sb.append(", ");
    sb.append("inshopTime:");
    if (this.inshopTime == null) {
      sb.append("null");
    } else {
      sb.append(this.inshopTime);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CustomerRpcDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CustomerRpcDTOStandardScheme getScheme() {
      return new CustomerRpcDTOStandardScheme();
    }
  }

  private static class CustomerRpcDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<CustomerRpcDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CustomerRpcDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROJECT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectIds = iprot.readString();
              struct.setProjectIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SELLER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sellerId = iprot.readI32();
              struct.setSellerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SHOP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.shopId = iprot.readI32();
              struct.setShopIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.source = iprot.readString();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // WEDDING_DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.weddingDay = iprot.readString();
              struct.setWeddingDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DRESSER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dresser = iprot.readString();
              struct.setDresserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BUDGET
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.budget = iprot.readI64();
              struct.setBudgetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dress = iprot.readString();
              struct.setDressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SUIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.suit = iprot.readString();
              struct.setSuitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // JEWEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jewel = iprot.readString();
              struct.setJewelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // SIDA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sida = iprot.readString();
              struct.setSidaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CREATE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createUserId = iprot.readI32();
              struct.setCreateUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CREATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createdAt = iprot.readString();
              struct.setCreatedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // UPSTRINGD_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.upstringdAt = iprot.readString();
              struct.setUpstringdAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // DELETED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.deletedAt = iprot.readString();
              struct.setDeletedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PROJECT_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.projectInfo = iprot.readString();
              struct.setProjectInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // BOOK_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bookStatus = iprot.readI32();
              struct.setBookStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // INSHOP_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.inshopTime = iprot.readString();
              struct.setInshopTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CustomerRpcDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      if (struct.projectIds != null) {
        oprot.writeFieldBegin(PROJECT_IDS_FIELD_DESC);
        oprot.writeString(struct.projectIds);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SELLER_ID_FIELD_DESC);
      oprot.writeI32(struct.sellerId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SHOP_ID_FIELD_DESC);
      oprot.writeI32(struct.shopId);
      oprot.writeFieldEnd();
      if (struct.source != null) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeString(struct.source);
        oprot.writeFieldEnd();
      }
      if (struct.weddingDay != null) {
        oprot.writeFieldBegin(WEDDING_DAY_FIELD_DESC);
        oprot.writeString(struct.weddingDay);
        oprot.writeFieldEnd();
      }
      if (struct.dresser != null) {
        oprot.writeFieldBegin(DRESSER_FIELD_DESC);
        oprot.writeString(struct.dresser);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUDGET_FIELD_DESC);
      oprot.writeI64(struct.budget);
      oprot.writeFieldEnd();
      if (struct.dress != null) {
        oprot.writeFieldBegin(DRESS_FIELD_DESC);
        oprot.writeString(struct.dress);
        oprot.writeFieldEnd();
      }
      if (struct.suit != null) {
        oprot.writeFieldBegin(SUIT_FIELD_DESC);
        oprot.writeString(struct.suit);
        oprot.writeFieldEnd();
      }
      if (struct.jewel != null) {
        oprot.writeFieldBegin(JEWEL_FIELD_DESC);
        oprot.writeString(struct.jewel);
        oprot.writeFieldEnd();
      }
      if (struct.sida != null) {
        oprot.writeFieldBegin(SIDA_FIELD_DESC);
        oprot.writeString(struct.sida);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_USER_ID_FIELD_DESC);
      oprot.writeI32(struct.createUserId);
      oprot.writeFieldEnd();
      if (struct.createdAt != null) {
        oprot.writeFieldBegin(CREATED_AT_FIELD_DESC);
        oprot.writeString(struct.createdAt);
        oprot.writeFieldEnd();
      }
      if (struct.upstringdAt != null) {
        oprot.writeFieldBegin(UPSTRINGD_AT_FIELD_DESC);
        oprot.writeString(struct.upstringdAt);
        oprot.writeFieldEnd();
      }
      if (struct.deletedAt != null) {
        oprot.writeFieldBegin(DELETED_AT_FIELD_DESC);
        oprot.writeString(struct.deletedAt);
        oprot.writeFieldEnd();
      }
      if (struct.projectInfo != null) {
        oprot.writeFieldBegin(PROJECT_INFO_FIELD_DESC);
        oprot.writeString(struct.projectInfo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BOOK_STATUS_FIELD_DESC);
      oprot.writeI32(struct.bookStatus);
      oprot.writeFieldEnd();
      if (struct.inshopTime != null) {
        oprot.writeFieldBegin(INSHOP_TIME_FIELD_DESC);
        oprot.writeString(struct.inshopTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CustomerRpcDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CustomerRpcDTOTupleScheme getScheme() {
      return new CustomerRpcDTOTupleScheme();
    }
  }

  private static class CustomerRpcDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<CustomerRpcDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CustomerRpcDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetPhone()) {
        optionals.set(2);
      }
      if (struct.isSetProjectIds()) {
        optionals.set(3);
      }
      if (struct.isSetSellerId()) {
        optionals.set(4);
      }
      if (struct.isSetShopId()) {
        optionals.set(5);
      }
      if (struct.isSetSource()) {
        optionals.set(6);
      }
      if (struct.isSetWeddingDay()) {
        optionals.set(7);
      }
      if (struct.isSetDresser()) {
        optionals.set(8);
      }
      if (struct.isSetBudget()) {
        optionals.set(9);
      }
      if (struct.isSetDress()) {
        optionals.set(10);
      }
      if (struct.isSetSuit()) {
        optionals.set(11);
      }
      if (struct.isSetJewel()) {
        optionals.set(12);
      }
      if (struct.isSetSida()) {
        optionals.set(13);
      }
      if (struct.isSetRemark()) {
        optionals.set(14);
      }
      if (struct.isSetCreateUserId()) {
        optionals.set(15);
      }
      if (struct.isSetCreatedAt()) {
        optionals.set(16);
      }
      if (struct.isSetUpstringdAt()) {
        optionals.set(17);
      }
      if (struct.isSetDeletedAt()) {
        optionals.set(18);
      }
      if (struct.isSetProjectInfo()) {
        optionals.set(19);
      }
      if (struct.isSetBookStatus()) {
        optionals.set(20);
      }
      if (struct.isSetInshopTime()) {
        optionals.set(21);
      }
      oprot.writeBitSet(optionals, 22);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetProjectIds()) {
        oprot.writeString(struct.projectIds);
      }
      if (struct.isSetSellerId()) {
        oprot.writeI32(struct.sellerId);
      }
      if (struct.isSetShopId()) {
        oprot.writeI32(struct.shopId);
      }
      if (struct.isSetSource()) {
        oprot.writeString(struct.source);
      }
      if (struct.isSetWeddingDay()) {
        oprot.writeString(struct.weddingDay);
      }
      if (struct.isSetDresser()) {
        oprot.writeString(struct.dresser);
      }
      if (struct.isSetBudget()) {
        oprot.writeI64(struct.budget);
      }
      if (struct.isSetDress()) {
        oprot.writeString(struct.dress);
      }
      if (struct.isSetSuit()) {
        oprot.writeString(struct.suit);
      }
      if (struct.isSetJewel()) {
        oprot.writeString(struct.jewel);
      }
      if (struct.isSetSida()) {
        oprot.writeString(struct.sida);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetCreateUserId()) {
        oprot.writeI32(struct.createUserId);
      }
      if (struct.isSetCreatedAt()) {
        oprot.writeString(struct.createdAt);
      }
      if (struct.isSetUpstringdAt()) {
        oprot.writeString(struct.upstringdAt);
      }
      if (struct.isSetDeletedAt()) {
        oprot.writeString(struct.deletedAt);
      }
      if (struct.isSetProjectInfo()) {
        oprot.writeString(struct.projectInfo);
      }
      if (struct.isSetBookStatus()) {
        oprot.writeI32(struct.bookStatus);
      }
      if (struct.isSetInshopTime()) {
        oprot.writeString(struct.inshopTime);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CustomerRpcDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(22);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(3)) {
        struct.projectIds = iprot.readString();
        struct.setProjectIdsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sellerId = iprot.readI32();
        struct.setSellerIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.shopId = iprot.readI32();
        struct.setShopIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.source = iprot.readString();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.weddingDay = iprot.readString();
        struct.setWeddingDayIsSet(true);
      }
      if (incoming.get(8)) {
        struct.dresser = iprot.readString();
        struct.setDresserIsSet(true);
      }
      if (incoming.get(9)) {
        struct.budget = iprot.readI64();
        struct.setBudgetIsSet(true);
      }
      if (incoming.get(10)) {
        struct.dress = iprot.readString();
        struct.setDressIsSet(true);
      }
      if (incoming.get(11)) {
        struct.suit = iprot.readString();
        struct.setSuitIsSet(true);
      }
      if (incoming.get(12)) {
        struct.jewel = iprot.readString();
        struct.setJewelIsSet(true);
      }
      if (incoming.get(13)) {
        struct.sida = iprot.readString();
        struct.setSidaIsSet(true);
      }
      if (incoming.get(14)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(15)) {
        struct.createUserId = iprot.readI32();
        struct.setCreateUserIdIsSet(true);
      }
      if (incoming.get(16)) {
        struct.createdAt = iprot.readString();
        struct.setCreatedAtIsSet(true);
      }
      if (incoming.get(17)) {
        struct.upstringdAt = iprot.readString();
        struct.setUpstringdAtIsSet(true);
      }
      if (incoming.get(18)) {
        struct.deletedAt = iprot.readString();
        struct.setDeletedAtIsSet(true);
      }
      if (incoming.get(19)) {
        struct.projectInfo = iprot.readString();
        struct.setProjectInfoIsSet(true);
      }
      if (incoming.get(20)) {
        struct.bookStatus = iprot.readI32();
        struct.setBookStatusIsSet(true);
      }
      if (incoming.get(21)) {
        struct.inshopTime = iprot.readString();
        struct.setInshopTimeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

